// automatically generated by the FlatBuffers compiler, do not modify

/**
 * @const
 * @namespace
 */
var structz = structz || {};

/**
 * @constructor
 */
structz.CacheHandlersObj = function() {
  /**
   * @type {flatbuffers.ByteBuffer}
   */
  this.bb = null;

  /**
   * @type {number}
   */
  this.bb_pos = 0;
};

/**
 * @param {number} i
 * @param {flatbuffers.ByteBuffer} bb
 * @returns {structz.CacheHandlersObj}
 */
structz.CacheHandlersObj.prototype.__init = function(i, bb) {
  this.bb_pos = i;
  this.bb = bb;
  return this;
};

/**
 * @param {flatbuffers.ByteBuffer} bb
 * @param {structz.CacheHandlersObj=} obj
 * @returns {structz.CacheHandlersObj}
 */
structz.CacheHandlersObj.getRootAsCacheHandlersObj = function(bb, obj) {
  return (obj || new structz.CacheHandlersObj).__init(bb.readInt32(bb.position()) + bb.position(), bb);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
structz.CacheHandlersObj.prototype.contentType = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 4);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @returns {number}
 */
structz.CacheHandlersObj.prototype.status = function() {
  var offset = this.bb.__offset(this.bb_pos, 6);
  return offset ? this.bb.readInt32(this.bb_pos + offset) : 0;
};

/**
 * @returns {flatbuffers.Long}
 */
structz.CacheHandlersObj.prototype.timed = function() {
  var offset = this.bb.__offset(this.bb_pos, 8);
  return offset ? this.bb.readInt64(this.bb_pos + offset) : this.bb.createLong(0, 0);
};

/**
 * @param {flatbuffers.Encoding=} optionalEncoding
 * @returns {string|Uint8Array|null}
 */
structz.CacheHandlersObj.prototype.body = function(optionalEncoding) {
  var offset = this.bb.__offset(this.bb_pos, 10);
  return offset ? this.bb.__string(this.bb_pos + offset, optionalEncoding) : null;
};

/**
 * @param {flatbuffers.Builder} builder
 */
structz.CacheHandlersObj.startCacheHandlersObj = function(builder) {
  builder.startObject(4);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} contentTypeOffset
 */
structz.CacheHandlersObj.addContentType = function(builder, contentTypeOffset) {
  builder.addFieldOffset(0, contentTypeOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {number} status
 */
structz.CacheHandlersObj.addStatus = function(builder, status) {
  builder.addFieldInt32(1, status, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Long} timed
 */
structz.CacheHandlersObj.addTimed = function(builder, timed) {
  builder.addFieldInt64(2, timed, builder.createLong(0, 0));
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} bodyOffset
 */
structz.CacheHandlersObj.addBody = function(builder, bodyOffset) {
  builder.addFieldOffset(3, bodyOffset, 0);
};

/**
 * @param {flatbuffers.Builder} builder
 * @returns {flatbuffers.Offset}
 */
structz.CacheHandlersObj.endCacheHandlersObj = function(builder) {
  var offset = builder.endObject();
  return offset;
};

/**
 * @param {flatbuffers.Builder} builder
 * @param {flatbuffers.Offset} offset
 */
structz.CacheHandlersObj.finishCacheHandlersObjBuffer = function(builder, offset) {
  builder.finish(offset);
};

